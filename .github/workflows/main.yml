name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch
  workflow_dispatch:  # Allow manual triggering via GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install dependencies and build the project
      - name: Build with Maven
        run: mvn clean package

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          # Install SSH client and SCP (secure copy) if not already installed
          sudo apt-get install -y openssh-client

          # Set up the SSH key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          # List files in the target directory to verify the .jar file exists
          ls -l /home/runner/work/SimpleWebsite/SimpleWebsite/target/

          # Copy the .jar file directly to the EC2 instance using SCP
          scp -o StrictHostKeyChecking=no -i private_key.pem /home/runner/work/SimpleWebsite/SimpleWebsite/target/Website-1.0-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user/Website/

          # SSH into EC2 and start the application
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            # Display the public IP and DNS name of the EC2 instance
            echo "Public IP: \$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
            echo "Public DNS: \$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)"

            # Navigate to the project directory
            cd /home/ec2-user/Website

            # Remove any old .jar file (optional)
            #rm -f Website-1.0-SNAPSHOT.jar

            # Start the application in the background (using nohup to keep it running after SSH session ends)
            nohup java -cp Website-1.0-SNAPSHOT.jar com.example.Main > output.log 2>&1 &

            # Optional: Check if the application is running
            ps aux | grep java
          EOF
